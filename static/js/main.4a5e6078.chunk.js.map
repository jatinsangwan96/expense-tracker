{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","children","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","class","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a5e6078.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <h2>Expense Tracker</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","const AppReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    const deleteTransaction = (id) => {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{ \r\n                transactions: state.transactions,\r\n                deleteTransaction,\r\n                addTransaction\r\n             }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map((transaction) => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>&#x20B9;{total}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Balance;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map((transaction) => transaction.amount);\r\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">&#x20B9;{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">&#x20B9;{expense}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IncomeExpenses;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = (props) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const deleteTransactionHandler = () => {\r\n        deleteTransaction(props.transaction.id);\r\n    }\r\n\r\n    const sign = props.transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={props.transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {props.transaction.text} <span>{sign}&#x20B9;{Math.abs(props.transaction.amount)}</span><button onClick={deleteTransactionHandler} className=\"delete-btn\"><i class=\"fas fa-times-circle\" /></button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Transaction;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map((transaction) => (\r\n                    <Transaction\r\n                        key={transaction.id}\r\n                        transaction={transaction}\r\n                    />\r\n                ))}\r\n            </ul> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransactionList;","import { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const textChangeHandler = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={text}\r\n                        onChange={textChangeHandler}\r\n                        placeholder=\"Enter a description...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income)</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={amountChangeHandler}\r\n                        placeholder=\"Enter amount...\"\r\n                    />\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddTransaction;","import Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>      \n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}