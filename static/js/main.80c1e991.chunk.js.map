{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","children","Balance","useContext","incomeType","expenseType","incomeAmounts","map","amount","expenseAmounts","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","class","TransactionList","length","AddTransaction","useState","setText","setAmount","setType","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","defaultValue","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"uLAMeA,EANA,WACX,OACI,kD,qBCeOC,EAjBI,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACV,IAAK,qBACD,OAAO,2BACAF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAEzF,IAAK,kBACD,OAAO,2BACAP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAEhD,QACI,OAAOH,ICTbQ,EAAe,CACjBL,aAAc,IAILM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAACC,GAC3B,MAA0BC,qBAAWd,EAAYS,GAAjD,mBAAOR,EAAP,KAAcc,EAAd,KAiBA,OACI,cAACL,EAAcM,SAAf,CACIC,MAAO,CACHb,aAAcH,EAAMG,aACpBc,kBAlBc,SAACX,GACvBQ,EAAS,CACLZ,KAAM,qBACNK,QAASD,KAgBLY,eAZW,SAACb,GACpBS,EAAS,CACLZ,KAAM,kBACNK,QAASF,MAKb,SAOKO,EAAMO,YCbJC,EAtBC,WACZ,IAAOjB,EAAgBkB,qBAAWZ,GAA3BN,aAEDmB,EAAanB,EAAaC,QAAO,SAACC,GAAD,MAAsC,QAArBA,EAAYH,QAC9DqB,EAAcpB,EAAaC,QAAO,SAACC,GAAD,MAAsC,QAArBA,EAAYH,QAE/DsB,EAAgBF,EAAWG,KAAI,SAACpB,GAAD,OAAiBA,EAAYqB,UAC5DC,EAAiBJ,EAAYE,KAAI,SAACpB,GAAD,OAAiBA,EAAYqB,UAK9DE,EAHSJ,EAAcK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAC7DL,EAAeE,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAI/E,OACI,qCACI,8CACA,wCAAaJ,SCSVK,EA1BQ,WACnB,IAAO9B,EAAgBkB,qBAAWZ,GAA3BN,aAEDmB,EAAanB,EAAaC,QAAO,SAACC,GAAD,MAAsC,QAArBA,EAAYH,QAC9DqB,EAAcpB,EAAaC,QAAO,SAACC,GAAD,MAAsC,QAArBA,EAAYH,QAE/DsB,EAAgBF,EAAWG,KAAI,SAACpB,GAAD,OAAiBA,EAAYqB,UAC5DC,EAAiBJ,EAAYE,KAAI,SAACpB,GAAD,OAAiBA,EAAYqB,UAE9DQ,EAASV,EAAcK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GACvEG,EAAUR,EAAeE,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAE/E,OACI,sBAAKI,UAAU,oBAAf,UACI,gCACI,wCACA,oBAAGA,UAAU,aAAb,mBAAmCF,QAEvC,gCACI,yCACA,oBAAGE,UAAU,cAAb,mBAAoCD,YCJrCE,EAhBK,SAACzB,GACjB,IAAQK,EAAsBI,qBAAWZ,GAAjCQ,kBAMFqB,EAAkC,QAA3B1B,EAAMP,YAAYH,KAAiB,IAAM,IAEtD,OACI,qBAAIkC,UAAsC,QAA3BxB,EAAMP,YAAYH,KAAiB,OAAS,QAA3D,UACKU,EAAMP,YAAYkC,KADvB,IAC6B,iCAAOD,EAAP,SAAqBE,KAAKC,IAAI7B,EAAMP,YAAYqB,WAAe,wBAAQgB,QARvE,WAC7BzB,EAAkBL,EAAMP,YAAYC,KAOmG8B,UAAU,aAArD,SAAkE,mBAAGO,MAAM,8BCShKC,EAnBS,WACpB,IAAOzC,EAAgBkB,qBAAWZ,GAA3BN,aAEP,OACI,qCACI,yCACyB,IAAxBA,EAAa0C,QAAgB,4CAC9B,oBAAIT,UAAU,OAAd,SACKjC,EAAasB,KAAI,SAACpB,GAAD,OACd,cAAC,EAAD,CAEIA,YAAaA,GADRA,EAAYC,aC0D1BwC,EArEQ,WACnB,IAAQ5B,EAAmBG,qBAAWZ,GAA9BS,eAER,EAAwB6B,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOrB,EAAP,KAAeuB,EAAf,KACA,EAAwBF,mBAAS,CAAE/B,MAAO,QAA1C,mBAAOd,EAAP,KAAagD,EAAb,KA6BA,OACI,qCACI,qDACA,uBAAMC,SAlBQ,SAACC,GACnBA,EAAMC,iBAEN,IAAMC,EAAiB,CACnBhD,GAAIkC,KAAKe,MAAsB,IAAhBf,KAAKgB,UACpBtD,KAAMA,EAAKc,MACXuB,OACAb,QAASA,GAGbR,EAAeoC,GACfN,EAAQ,IACRC,EAAU,IAMN,UACI,sBAAKb,UAAU,eAAf,UACI,uBAAOqB,QAAQ,OAAf,8BACA,yBAAQC,aAAcxD,EAAKc,MAAO2C,SAjCtB,SAACP,GACzBF,EAAQ,CAAElC,MAAOoC,EAAMQ,OAAO5C,SAgClB,UACI,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,2BAGR,sBAAKoB,UAAU,eAAf,UACI,uBAAOqB,QAAQ,OAAf,yBACA,uBACIvD,KAAK,OACLc,MAAOuB,EACPoB,SAvCM,SAACP,GACvBJ,EAAQI,EAAMQ,OAAO5C,QAuCL6C,YAAY,8BAGpB,sBAAKzB,UAAU,eAAf,UACI,uBAAOqB,QAAQ,SAAf,oBACA,uBACIvD,KAAK,SACLc,MAAOU,EACPiC,SA5CQ,SAACP,GACzBH,EAAUG,EAAMQ,OAAO5C,QA4CP6C,YAAY,uBAGpB,wBAAQzB,UAAU,MAAlB,oCC1CD0B,G,MAdH,WACV,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAK1B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCdR2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80c1e991.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n        <h2>Expense Tracker</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","const AppReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    const deleteTransaction = (id) => {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{ \r\n                transactions: state.transactions,\r\n                deleteTransaction,\r\n                addTransaction\r\n             }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const incomeType = transactions.filter((transaction) => transaction.type === 'inc');\r\n    const expenseType = transactions.filter((transaction) => transaction.type === 'exp');\r\n\r\n    const incomeAmounts = incomeType.map((transaction) => transaction.amount);\r\n    const expenseAmounts = expenseType.map((transaction) => transaction.amount);\r\n\r\n    const income = incomeAmounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = expenseAmounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    const total = income - expense;\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>&#x20B9;{total}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Balance;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const incomeType = transactions.filter((transaction) => transaction.type === 'inc');\r\n    const expenseType = transactions.filter((transaction) => transaction.type === 'exp');\r\n\r\n    const incomeAmounts = incomeType.map((transaction) => transaction.amount);\r\n    const expenseAmounts = expenseType.map((transaction) => transaction.amount);\r\n\r\n    const income = incomeAmounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = expenseAmounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">&#x20B9;{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">&#x20B9;{expense}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IncomeExpenses;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = (props) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const deleteTransactionHandler = () => {\r\n        deleteTransaction(props.transaction.id);\r\n    }\r\n\r\n    const sign = props.transaction.type === \"inc\" ? '+' : '-';\r\n\r\n    return (\r\n        <li className={props.transaction.type === \"inc\" ? 'plus' : 'minus'}>\r\n            {props.transaction.text} <span>{sign}&#x20B9;{Math.abs(props.transaction.amount)}</span><button onClick={deleteTransactionHandler} className=\"delete-btn\"><i class=\"fas fa-times-circle\" /></button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Transaction;","import { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            {transactions.length === 0 && <p>No Expenses</p>}\r\n            <ul className=\"list\">\r\n                {transactions.map((transaction) => (\r\n                    <Transaction\r\n                        key={transaction.id}\r\n                        transaction={transaction}\r\n                    />\r\n                ))}\r\n            </ul> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default TransactionList;","import { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [type, setType] = useState({ value: \"inc\" })\r\n\r\n    const optionChangeHandler = (event) => {\r\n        setType({ value: event.target.value });\r\n    }\r\n    \r\n    const textChangeHandler = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            type: type.value,\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n        setText('');\r\n        setAmount(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Transaction Type</label>\r\n                    <select defaultValue={type.value} onChange={optionChangeHandler}>\r\n                        <option value=\"inc\">Income</option>\r\n                        <option value=\"exp\">Expense</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={text}\r\n                        onChange={textChangeHandler}\r\n                        placeholder=\"Enter a description...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={amountChangeHandler}\r\n                        placeholder=\"Enter amount...\"\r\n                    />\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddTransaction;","import Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>      \n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}